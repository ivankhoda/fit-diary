version: '3'

services:
  web:
    image: ivankhoda/menu:prod
    ports:
      - "3000:3000"
    env_file:
      - .env/production/database
      - .env/production/web
      - .env/production/telegram
    networks:
      - menu

  nginx:
        image: ivankhoda/nginx:prod
        ports:
          - "81:80"
          - "82:81"
    #      - "444:443"
    #      - "445:444"
    #    volumes:
    #        - ./nginx/conf/:/etc/nginx/conf.d/:ro
    #        - ./certbot/www/:/var/www/certbot/:ro
    #        - ./docker/nginx/menu.conf:/etc/nginx/conf.d/menu.conf
    #        - ./docker/nginx/app.conf:/etc/nginx/conf.d/app.conf
        networks:
          - menu
  redis:
    image: redis
    networks:
      - menu

  database:
    image: postgres:16-alpine
    env_file:
      - .env/production/database
      - .env/production/web
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - menu

  db-creator:
      image: ivankhoda/menu:prod
      command: [ "bin/rails", "db:create" ]
      env_file:
        - .env/production/database
        - .env/production/web
      deploy:
        restart_policy:
          condition: none
      networks:
        - menu

  db-migrator:
      image: ivankhoda/menu:prod
      command: [ "bin/rails", "db:migrate" ]
      env_file:
        - .env/production/database
        - .env/production/web
      deploy:
        restart_policy:
          condition: none
      depends_on:
        - db-creator
      networks:
        - menu

volumes:
  db_data:

#Docker Networks
networks:
  menu:
    driver: overlay
    attachable: true
