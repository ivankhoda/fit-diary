version: '3'

services:
  web:
    image: ivankhoda/menu:prod
#    ports:
#      - "80:3000"
    env_file:
      - .env/production/database
      - .env/production/web
      - .env/production/telegram

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf
#          - .:/usr/src/app/nginx/conf.d/ :/etc/nginx/conf.d/
#        - .:/var/lib/nginx/data

  redis:
    image: redis

  database:
    image: postgres:alpine
    env_file:
      - .env/production/database
      - .env/production/web
    volumes:
      - db_data:/var/lib/postgresql/data

  db-creator:
      image: ivankhoda/menu:prod
      command: [ "bin/rails", "db:create" ]
      env_file:
        - .env/production/database
        - .env/production/web
      deploy:
        restart_policy:
          condition: none

  db-migrator:
      image: ivankhoda/menu:prod
      command: [ "bin/rails", "db:migrate" ]
      env_file:
        - .env/production/database
        - .env/production/web
      deploy:
        restart_policy:
          condition: none
      depends_on:
        - db-creator

volumes:
  db_data:

#Docker Networks
networks:
  app-network:
    driver: bridge

